{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "semver": "^6.1.1"
  },
  "description": "Cloud executable protocol",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "0.14.2 (build e881f16)",
  "license": "Apache-2.0",
  "name": "@aws-cdk/cx-api",
  "readme": {
    "markdown": "## Cloud Executable protocol\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)\n\n> **This is a _developer preview_ (public beta) module. Releases might lack important features and might have\n> future breaking changes.**\n>\n> This API is still under active development and subject to non-backward\n> compatible changes or removal in any future version. Use of the API is not recommended in production\n> environments. Experimental APIs are not subject to the Semantic Versioning model.\n\n---\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/cx-api",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.CXAPI",
      "packageId": "Amazon.CDK.CXAPI",
      "signAssembly": true,
      "versionSuffix": "-devpreview"
    },
    "java": {
      "maven": {
        "artifactId": "cdk-cx-api",
        "groupId": "software.amazon.awscdk",
        "versionSuffix": ".DEVPREVIEW"
      },
      "package": "software.amazon.awscdk.cxapi"
    },
    "js": {
      "npm": "@aws-cdk/cx-api"
    },
    "python": {
      "distName": "aws-cdk.cx-api",
      "module": "aws_cdk.cx_api"
    }
  },
  "types": {
    "@aws-cdk/cx-api.ArtifactManifest": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A manifest for a single artifact within the cloud assembly."
      },
      "fqn": "@aws-cdk/cx-api.ArtifactManifest",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-artifact.ts",
        "line": 27
      },
      "name": "ArtifactManifest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The environment into which this artifact is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 36
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 31
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/cx-api.ArtifactType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "IDs of artifacts that must be deployed before this artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 46
          },
          "name": "dependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Associated metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 41
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/cx-api.MetadataEntry"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The set of properties for this artifact (depends on type)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 51
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/cx-api.ArtifactType": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Type of cloud artifact."
      },
      "fqn": "@aws-cdk/cx-api.ArtifactType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cloud-artifact.ts",
        "line": 15
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The artifact is an AWS CloudFormation stack."
          },
          "name": "AWS_CLOUDFORMATION_STACK"
        }
      ],
      "name": "ArtifactType"
    },
    "@aws-cdk/cx-api.AssemblyBuildOptions": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.AssemblyBuildOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 219
      },
      "name": "AssemblyBuildOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- if this option is not specified, runtime info will not be included",
            "stability": "experimental",
            "summary": "Include the specified runtime information (module versions) in manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 224
          },
          "name": "runtimeInfo",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/cx-api.RuntimeInfo"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.AssemblyManifest": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A manifest which describes the cloud assembly."
      },
      "fqn": "@aws-cdk/cx-api.AssemblyManifest",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 12
      },
      "name": "AssemblyManifest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Protocol version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 16
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The set of artifacts in this assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 21
          },
          "name": "artifacts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.ArtifactManifest"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this field has values, it means that the\ncloud assembly is not complete and should not be deployed.",
            "stability": "experimental",
            "summary": "Missing context information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 27
          },
          "name": "missing",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.MissingContext"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Runtime information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 32
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/cx-api.RuntimeInfo"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.AvailabilityZonesContextQuery": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Query to hosted zone context provider."
      },
      "fqn": "@aws-cdk/cx-api.AvailabilityZonesContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/availability-zones.ts",
        "line": 6
      },
      "name": "AvailabilityZonesContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/availability-zones.ts",
            "line": 10
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/availability-zones.ts",
            "line": 15
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.AwsCloudFormationStackProperties": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Artifact properties for CloudFormation stacks."
      },
      "fqn": "@aws-cdk/cx-api.AwsCloudFormationStackProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-artifact.ts",
        "line": 57
      },
      "name": "AwsCloudFormationStackProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A file relative to the assembly root which contains the CloudFormation template for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 61
          },
          "name": "templateFile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Values for CloudFormation stack parameters that should be passed when the stack is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 66
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudArtifact": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an artifact within a cloud assembly."
      },
      "fqn": "@aws-cdk/cx-api.CloudArtifact",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "assembly",
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "manifest",
            "type": {
              "fqn": "@aws-cdk/cx-api.ArtifactManifest"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloud-artifact.ts",
        "line": 72
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a subclass of `CloudArtifact` based on the artifact type defined in the artifact manifest."
          },
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 79
          },
          "name": "from",
          "parameters": [
            {
              "docs": {
                "summary": "The cloud assembly from which to load the artifact."
              },
              "name": "assembly",
              "type": {
                "fqn": "@aws-cdk/cx-api.CloudAssembly"
              }
            },
            {
              "docs": {
                "summary": "The artifact ID."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The artifact manifest."
              },
              "name": "artifact",
              "type": {
                "fqn": "@aws-cdk/cx-api.ArtifactManifest"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudArtifact"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "all the metadata entries of a specific type in this artifact.",
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 143
          },
          "name": "findMetadataByType",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/cx-api.MetadataEntryResult"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "CloudArtifact",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 115
          },
          "name": "assembly",
          "type": {
            "fqn": "@aws-cdk/cx-api.CloudAssembly"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns all the artifacts that this artifact depends on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 125
          },
          "name": "dependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.CloudArtifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The environment into which to deploy this artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 102
          },
          "name": "environment",
          "type": {
            "fqn": "@aws-cdk/cx-api.Environment"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 115
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The artifact's manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 92
          },
          "name": "manifest",
          "type": {
            "fqn": "@aws-cdk/cx-api.ArtifactManifest"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The set of messages extracted from the artifact's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 97
          },
          "name": "messages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.SynthesisMessage"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudAssembly": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a deployable cloud application."
      },
      "fqn": "@aws-cdk/cx-api.CloudAssembly",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Reads a cloud assembly from the specified directory."
        },
        "parameters": [
          {
            "docs": {
              "summary": "The root directory of the assembly."
            },
            "name": "directory",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "throws": "if there is no stack artifact by that name"
            },
            "returns": "a `CloudFormationStackArtifact` object.",
            "stability": "experimental",
            "summary": "Returns a CloudFormation stack artifact from this assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 102
          },
          "name": "getStack",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the CloudFormation stack."
              },
              "name": "stackName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact"
            }
          }
        },
        {
          "docs": {
            "returns": "A `CloudArtifact` object or `undefined` if the artifact does not exist in this assembly.",
            "stability": "experimental",
            "summary": "Attempts to find an artifact with a specific identity."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 92
          },
          "name": "tryGetArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The artifact ID."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudArtifact"
            }
          }
        }
      ],
      "name": "CloudAssembly",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "All artifacts included in this assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 57
          },
          "name": "artifacts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.CloudArtifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The root directory of the cloud assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 47
          },
          "name": "directory",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The raw assembly manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 67
          },
          "name": "manifest",
          "type": {
            "fqn": "@aws-cdk/cx-api.AssemblyManifest"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Runtime information such as module versions used to synthesize this assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 62
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/cx-api.RuntimeInfo"
          }
        },
        {
          "docs": {
            "returns": "all the CloudFormation stack artifacts that are included in this assembly.",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 118
          },
          "name": "stacks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The schema version of the assembly manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 52
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudAssemblyBuilder": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Can be used to build a cloud assembly."
      },
      "fqn": "@aws-cdk/cx-api.CloudAssemblyBuilder",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Initializes a cloud assembly builder."
        },
        "parameters": [
          {
            "docs": {
              "summary": "The output directory, uses temporary directory if undefined."
            },
            "name": "outdir",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 147
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an artifact into the cloud assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 182
          },
          "name": "addArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The ID of the artifact."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The artifact manifest."
              },
              "name": "manifest",
              "type": {
                "fqn": "@aws-cdk/cx-api.ArtifactManifest"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Reports that some context is missing in order for this cloud assembly to be fully synthesized."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 190
          },
          "name": "addMissing",
          "parameters": [
            {
              "docs": {
                "summary": "Missing context information."
              },
              "name": "missing",
              "type": {
                "fqn": "@aws-cdk/cx-api.MissingContext"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Finalizes the cloud assembly into the output directory returns a `CloudAssembly` object that can be used to inspect the assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 199
          },
          "name": "build",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/cx-api.AssemblyBuildOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          }
        }
      ],
      "name": "CloudAssemblyBuilder",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The root directory of the resulting cloud assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 151
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudFormationStackArtifact": {
      "assembly": "@aws-cdk/cx-api",
      "base": "@aws-cdk/cx-api.CloudArtifact",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "assembly",
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "artifact",
            "type": {
              "fqn": "@aws-cdk/cx-api.ArtifactManifest"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation-artifact.ts",
        "line": 7
      },
      "name": "CloudFormationStackArtifact",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Any assets associated with this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation-artifact.ts",
            "line": 26
          },
          "name": "assets",
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "fqn": "@aws-cdk/cx-api.FileAssetMetadataEntry"
                    },
                    {
                      "fqn": "@aws-cdk/cx-api.ContainerImageAssetMetadataEntry"
                    }
                  ]
                }
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation-artifact.ts",
            "line": 36
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The original name as defined in the CDK app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation-artifact.ts",
            "line": 21
          },
          "name": "originalName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "CloudFormation parameters to pass to the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation-artifact.ts",
            "line": 31
          },
          "name": "parameters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation template for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation-artifact.ts",
            "line": 11
          },
          "name": "template",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The file name of the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation-artifact.ts",
            "line": 16
          },
          "name": "templateFile",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.ContainerImageAssetMetadataEntry": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.ContainerImageAssetMetadataEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 74
      },
      "name": "ContainerImageAssetMetadataEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Logical identifier for the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 38
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "ECR Repository name and repo digest (separated by \"@sha256:\") where this image is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 83
          },
          "name": "imageNameParameter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Type of asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 78
          },
          "name": "packaging",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Path on disk to the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 48
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The hash of the source directory used to build the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 43
          },
          "name": "sourceHash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no build args are passed",
            "stability": "experimental",
            "summary": "Build args to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 101
          },
          "name": "buildArgs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "automatically derived from the asset's ID.",
            "remarks": "Specify this property if you need to statically\naddress the image, e.g. from a Kubernetes Pod.\nNote, this is only the repository name, without the registry and\nthe tag parts.",
            "stability": "experimental",
            "summary": "ECR repository name, if omitted a default name based on the asset's ID is used instead."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 94
          },
          "name": "repositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.Environment": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Models an AWS execution environment, for use within the CDK toolkit."
      },
      "fqn": "@aws-cdk/cx-api.Environment",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/environment.ts",
        "line": 11
      },
      "name": "Environment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The AWS account this environment deploys into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 16
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The arbitrary name of this environment (user-set, or at least user-meaningful)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 13
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The AWS region name where this environment deploys into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 19
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.EnvironmentUtils": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.EnvironmentUtils",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/environment.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 42
          },
          "name": "format",
          "parameters": [
            {
              "name": "account",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "region",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 26
          },
          "name": "parse",
          "parameters": [
            {
              "name": "environment",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.Environment"
            }
          },
          "static": true
        }
      ],
      "name": "EnvironmentUtils"
    },
    "@aws-cdk/cx-api.FileAssetMetadataEntry": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.FileAssetMetadataEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 52
      },
      "name": "FileAssetMetadataEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the parameter where the hash of the bundled asset should be passed in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 71
          },
          "name": "artifactHashParameter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Logical identifier for the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 38
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Requested packaging style."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 56
          },
          "name": "packaging",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Path on disk to the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 48
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of parameter where S3 bucket should be passed in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 61
          },
          "name": "s3BucketParameter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of parameter where S3 key should be passed in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 66
          },
          "name": "s3KeyParameter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The hash of the source directory used to build the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 43
          },
          "name": "sourceHash",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.HostedZoneContextQuery": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Query to hosted zone context provider."
      },
      "fqn": "@aws-cdk/cx-api.HostedZoneContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/hosted-zone.ts",
        "line": 6
      },
      "name": "HostedZoneContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The domain name e.g. example.com to lookup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/hosted-zone.ts",
            "line": 20
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/hosted-zone.ts",
            "line": 10
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "True if the zone you want to find is a private hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/hosted-zone.ts",
            "line": 25
          },
          "name": "privateZone",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/hosted-zone.ts",
            "line": 15
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you provide VPC ID and privateZone is false, this will return no results\nand raise an error.",
            "stability": "experimental",
            "summary": "The VPC ID to that the private zone must be associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/hosted-zone.ts",
            "line": 33
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.MetadataEntry": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "An metadata entry in the construct."
      },
      "fqn": "@aws-cdk/cx-api.MetadataEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata.ts",
        "line": 40
      },
      "name": "MetadataEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of the metadata entry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 44
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 49
          },
          "name": "data",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A stack trace for when the entry was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 54
          },
          "name": "trace",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cx-api.MetadataEntryResult": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.MetadataEntryResult",
      "interfaces": [
        "@aws-cdk/cx-api.MetadataEntry"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata.ts",
        "line": 57
      },
      "name": "MetadataEntryResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The path in which this entry was defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 61
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.MissingContext": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents a missing piece of context."
      },
      "fqn": "@aws-cdk/cx-api.MissingContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 240
      },
      "name": "MissingContext",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The missing context key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 244
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A set of provider-specific options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 254
          },
          "name": "props",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The provider from which we expect this context key to be obtained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 249
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.RuntimeInfo": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Information about the application's runtime components."
      },
      "fqn": "@aws-cdk/cx-api.RuntimeInfo",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 230
      },
      "name": "RuntimeInfo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The list of libraries loaded in the application, associated with their versions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 234
          },
          "name": "libraries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/cx-api.SSMParameterContextQuery": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Query to hosted zone context provider."
      },
      "fqn": "@aws-cdk/cx-api.SSMParameterContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/ssm-parameter.ts",
        "line": 6
      },
      "name": "SSMParameterContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/ssm-parameter.ts",
            "line": 10
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Parameter name to query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/ssm-parameter.ts",
            "line": 20
          },
          "name": "parameterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/ssm-parameter.ts",
            "line": 15
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.SynthesisMessage": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.SynthesisMessage",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata.ts",
        "line": 69
      },
      "name": "SynthesisMessage",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 72
          },
          "name": "entry",
          "type": {
            "fqn": "@aws-cdk/cx-api.MetadataEntry"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 71
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 70
          },
          "name": "level",
          "type": {
            "fqn": "@aws-cdk/cx-api.SynthesisMessageLevel"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.SynthesisMessageLevel": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.SynthesisMessageLevel",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/metadata.ts",
        "line": 32
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "INFO"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WARNING"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ERROR"
        }
      ],
      "name": "SynthesisMessageLevel"
    },
    "@aws-cdk/cx-api.VpcContextQuery": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Query input for looking up a VPC."
      },
      "fqn": "@aws-cdk/cx-api.VpcContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/vpc.ts",
        "line": 6
      },
      "name": "VpcContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Filter parameters are the same as passed to DescribeVpcs.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html",
            "stability": "experimental",
            "summary": "Filters to apply to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 24
          },
          "name": "filter",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 10
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 15
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.VpcContextResponse": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a discovered VPC."
      },
      "fqn": "@aws-cdk/cx-api.VpcContextResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/vpc.ts",
        "line": 30
      },
      "name": "VpcContextResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "AZs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 40
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "VPC id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 35
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(isolatedGroups)",
            "stability": "experimental",
            "summary": "IDs of all isolated subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 75
          },
          "name": "isolatedSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(isolatedGroups)",
            "stability": "experimental",
            "summary": "Name of isolated subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 82
          },
          "name": "isolatedSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(privateGroups)",
            "stability": "experimental",
            "summary": "IDs of all private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 61
          },
          "name": "privateSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(privateGroups)",
            "stability": "experimental",
            "summary": "Name of private subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 68
          },
          "name": "privateSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(publicGroups)",
            "stability": "experimental",
            "summary": "IDs of all public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 47
          },
          "name": "publicSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(publicGroups)",
            "stability": "experimental",
            "summary": "Name of public subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 54
          },
          "name": "publicSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPN gateway ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 87
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "1.1.0",
  "fingerprint": "+tUBSDt1Zxrg3ouyi7f2SEbYUIVpVPndR9d0hxdAtAY="
}
