- name: Launch the HUB router
  ec2:
    group_id: '{{ SECURITY_GROUP }}'
    count: 1
    instance_type: 't2.medium'
    image: 'ami-062f4179'
    wait: yes
    region: '{{ aws_region }}'
    keypair: '{{ KEY_PAIR }}'
    vpc_subnet_id: '{{ MANAGEMENT_SUBNET }}'
    assign_public_ip: no
    instance_tags:
      Name: '{{ spoke_server_name }}'
      Pod: '{{lab_pod | string}}'
  register: spoke

- name: Set EC2 fact
  set_fact:
    spoke: '{{spoke.instances[0]}}'

- name: Set DNS records
  route53:
    state: present
    zone: conatest.click
    record: '{{ spoke_dns_record }}'
    type: A
    value: '{{ spoke.private_ip }}'
    wait: yes
    overwrite: true
  register: dns

- name: 'Create {{ secret_vars_file_name }}.yml file inside the secret_vars directory'
  lineinfile:
    dest: 'secret_vars/{{secret_vars_file_name}}.yml'
    line: '---'
    create: yes

- name: 'Write vpc info to {{secret_vars_file_name}}.yml file inside the secret_vars directory'
  lineinfile:
    dest: 'secret_vars/{{secret_vars_file_name}}.yml'
    regexp: '^{{ item.regexp | upper }}'
    line: "{{ item.regexp | upper }}: {{ '\"' + item.line + '\"' }}"
  with_items:
    - { regexp: 'spoke{{spoke_server_number}}_public_ip', line: '{{ spoke.public_ip }}' }
    - { regexp: 'spoke{{spoke_server_number}}_public_dns', line: '{{ spoke_dns_record }}' }

- name: Attach ENI to tunnel1 subnet
  ec2_eni:
    instance_id: '{{ spoke.id }}'
    device_index: 1
    private_ip_address: '{{aws_spoke1_subnet_class_default}}.1'
    subnet_id: '{{TUNNEL1_SUBNET}}'
    region: '{{aws_region}}'
    security_groups: 
      - '{{SECURITY_GROUP}}'
    state: present
    attached: yes
    delete_on_termination: yes
    description: 'Tunnel 1 interface'

- include_vars: "secret_vars/{{ secret_vars_file_name }}.yml"
